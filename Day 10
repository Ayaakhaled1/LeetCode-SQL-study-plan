Q1) 182. Duplicate Emails
Write an SQL query to report all the duplicate emails.

Return the result table in any order.

SELECT email as Email
FROM Person
GROUP BY  email
HAVING count(email) > 1

-------------------------------------------------------------------------------------------------------------------------------------
Q2) 1050. Actors and Directors Who Cooperated At Least Three Times

Write a SQL query for a report that provides the pairs (actor_id, director_id) where the actor has cooperated with the director at least three times.


SELECT  actor_id    , director_id 
FROM (
SELECT actor_id    , director_id  , count(timestamp) as times
FROM 
ActorDirector
GROUP BY  actor_id    , director_id ) as tb
WHERE times >= 3

-------------------------------------------------------------------------------------------------------------------------------------
Q3) 1587. Bank Account Summary II
Write an SQL query to report the name and balance of users with a balance higher than 10000. 
The balance of an account is equal to the sum of the amounts of all transactions involving that account.

SELECT u.name as name , sum(t.amount) as balance    
FROM Users as u 
LEFT JOIN Transactions as t
ON u.account = t.account
GROUP BY u.name 
HAVING sum(t.amount) > 10000

-------------------------------------------------------------------------------------------------------------------------------------
Q4) 1084. Sales Analysis III
Write an SQL query that reports the products that were only sold in the first quarter of 2019. That is, between 2019-01-01 and 2019-03-31 inclusive.

-- this is my first solution but i got Time Limit Exceeded 
SELECT product_id , product_name  FROM Product WHERE 
product_id NOT IN (
SELECT distinct product_id      
FROM Sales
WHERE sale_date NOT BETWEEN '2019-01-01' and '2019-03-31' )

-- 2nd soltuion but also time limit exceeded 
SELECT p.product_id , p.product_name  FROM Product as p
INNER JOIN Sales as s 
ON s.product_id = p.product_id
GROUP BY p.product_id , p.product_name
having MIN(sale_date) >=  '2019-01-01' and MAX(sale_date) <= '2019-03-31'
